apply plugin: 'java'

dependencies {
	implementation project(":demo:core")
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	implementation project(path: ':gltf')
}

sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.test.java.srcDirs = [ "test/" ]

project.ext.mainClassName = "net.mgsx.gltf.demo.DesktopLauncher"
project.ext.assetsDir = new File("../android/assets");


task run(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.assetsDir
	ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.assetsDir
	ignoreExitValue = true
	debug = true
}

task distDesktop(type: Jar, dependsOn: [classes]) {
	from files(sourceSets.main.output.classesDirs)
	from files(sourceSets.main.output.resourcesDir)
	from {configurations.compile.collect {zipTree(it)}}
	from files(project.assetsDir)

	exclude("models")

	// additional files could be added like this :
	// from file("$projectDir/LICENSE");

	manifest {
		attributes 'Main-Class': project.mainClassName
	}
	doLast {
		file(archivePath).setExecutable(true, false)
	}
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}