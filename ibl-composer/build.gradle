apply plugin: 'java'

ext {
    appName = "gdx-gltf-ibl-composer"
}

eclipse.project.name = appName


dependencies {
	implementation project(":gltf")
	implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    
}

sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["src"]
sourceSets.test.java.srcDirs = [ "test/" ]

project.ext.mainClassName = "net.mgsx.gltf.ibl.IBLComposerLauncher"
project.ext.assetsDir = new File("assets");


task run(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.assetsDir
	ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.assetsDir
	ignoreExitValue = true
	debug = true
}

task distIBL(type: Jar, dependsOn: [classes]) {
	from files(sourceSets.main.output.classesDirs)
	from files(sourceSets.main.output.resourcesDir)
	from {configurations.compile.collect {zipTree(it)}}
	from files(project.assetsDir)

	// additional files could be added like this :
	// from file("$projectDir/LICENSE");

	manifest {
		attributes 'Main-Class': project.mainClassName
	}
	doLast {
		file(archivePath).setExecutable(true, false)
	}
}
java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}